---
import { isSupabaseReady } from '../lib/supabase/client';
---
<form id="contactForm" class="space-y-6">
  <div>
    <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
    <input
      type="text"
      name="name"
      id="name"
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary bg-white/50"
      required
    />
  </div>
  <div>
    <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
    <input
      type="email"
      name="email"
      id="email"
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary bg-white/50"
      required
    />
  </div>
  <div>
    <label for="message" class="block text-sm font-medium text-gray-700">Message</label>
    <textarea
      name="message"
      id="message"
      rows="4"
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary bg-white/50"
      required
    ></textarea>
  </div>
  <div>
    <button
      type="submit"
      class="w-full bg-primary text-white px-6 py-3 rounded-md hover:bg-gray-800 transition shadow-lg"
      disabled={!isSupabaseReady}
    >
      {isSupabaseReady ? 'Send Message' : 'Database Not Connected'}
    </button>
  </div>
  {!isSupabaseReady && (
    <div class="text-amber-600 bg-amber-50 p-4 rounded-md text-center">
      Please connect to Supabase using the "Connect to Supabase" button
    </div>
  )}
  <div id="formStatus" class="hidden text-center p-4 rounded-md"></div>
</form>

<script>
  import { supabase, isSupabaseReady } from '../lib/supabase/client';

  const form = document.getElementById('contactForm') as HTMLFormElement;
  const statusDiv = document.getElementById('formStatus');

  if (form && statusDiv) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      if (!isSupabaseReady) {
        statusDiv.textContent = 'Database is not connected. Please connect to Supabase first.';
        statusDiv.className = 'text-amber-600 bg-amber-50 p-4 rounded-md';
        statusDiv.classList.remove('hidden');
        return;
      }

      try {
        const formData = new FormData(form);
        
        const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
        submitButton.disabled = true;
        submitButton.textContent = 'Sending...';

        const { error } = await supabase.from('messages').insert({
          name: formData.get('name') as string,
          email: formData.get('email') as string,
          message: formData.get('message') as string
        });

        if (error) throw error;

        statusDiv.textContent = 'Message sent successfully!';
        statusDiv.className = 'text-green-600 bg-green-50 p-4 rounded-md';
        statusDiv.classList.remove('hidden');
        form.reset();

      } catch (error) {
        console.error('Form submission error:', error);
        statusDiv.textContent = 'An error occurred. Please try again.';
        statusDiv.className = 'text-red-600 bg-red-50 p-4 rounded-md';
        statusDiv.classList.remove('hidden');
      } finally {
        const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
        submitButton.disabled = false;
        submitButton.textContent = isSupabaseReady ? 'Send Message' : 'Database Not Connected';
      }
    });
  }
</script>